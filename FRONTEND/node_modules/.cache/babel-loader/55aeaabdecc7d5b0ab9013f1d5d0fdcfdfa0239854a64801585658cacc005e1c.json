{"ast":null,"code":"var _jsxFileName = \"/Users/dhruv/AttendEase-Caffeine-Coders--1/FRONTEND/src/components/Lists/TeacherList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeacherList = ({\n  contract,\n  account\n}) => {\n  _s();\n  const [teachers, setTeachers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const fetchTeachers = async () => {\n    setLoading(true);\n    try {\n      const isTeacherPromises = [];\n      const namePromises = [];\n      const sectionCounter = await contract.methods.sectionCounter().call();\n\n      // Get all unique teacher addresses\n      const uniqueTeachers = new Set();\n      for (let i = 0; i < sectionCounter; i++) {\n        const section = await contract.methods.sections(i).call();\n        if (section.subjectIds) {\n          for (let j = 0; j < section.subjectIds.length; j++) {\n            const subject = await contract.methods.sections(i).subjects(j).call();\n            if (subject.teacher) {\n              uniqueTeachers.add(subject.teacher);\n            }\n          }\n        }\n      }\n      const teacherArray = Array.from(uniqueTeachers);\n      const teacherData = await Promise.all(teacherArray.map(async address => {\n        const name = await contract.methods.getUserName(address).call();\n        const isTeacher = await contract.methods.isTeacher(address).call();\n        return {\n          address,\n          name: name || \"Unnamed\",\n          isActive: isTeacher\n        };\n      }));\n      setTeachers(teacherData);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Error fetching teachers:\", error);\n      setMessage(\"Error fetching teachers. Please try again.\");\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (contract && account) {\n      fetchTeachers();\n    }\n  }, [contract, account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"teacher-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Teachers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading teachers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teachers.map((teacher, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: teacher.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: teacher.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: teacher.isActive ? \"Active\" : \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), teachers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No teachers found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherList, \"Ux2mXa4/xx88Yf6/jZ2Twkbx5PY=\");\n_c = TeacherList;\nexport default TeacherList;\nvar _c;\n$RefreshReg$(_c, \"TeacherList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TeacherList","contract","account","_s","teachers","setTeachers","loading","setLoading","message","setMessage","fetchTeachers","isTeacherPromises","namePromises","sectionCounter","methods","call","uniqueTeachers","Set","i","section","sections","subjectIds","j","length","subject","subjects","teacher","add","teacherArray","Array","from","teacherData","Promise","all","map","address","name","getUserName","isTeacher","isActive","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/dhruv/AttendEase-Caffeine-Coders--1/FRONTEND/src/components/Lists/TeacherList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst TeacherList = ({ contract, account }) => {\n  const [teachers, setTeachers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const fetchTeachers = async () => {\n    setLoading(true);\n    try {\n      const isTeacherPromises = [];\n      const namePromises = [];\n      const sectionCounter = await contract.methods.sectionCounter().call();\n      \n      // Get all unique teacher addresses\n      const uniqueTeachers = new Set();\n      for (let i = 0; i < sectionCounter; i++) {\n        const section = await contract.methods.sections(i).call();\n        if (section.subjectIds) {\n          for (let j = 0; j < section.subjectIds.length; j++) {\n            const subject = await contract.methods.sections(i).subjects(j).call();\n            if (subject.teacher) {\n              uniqueTeachers.add(subject.teacher);\n            }\n          }\n        }\n      }\n\n      const teacherArray = Array.from(uniqueTeachers);\n      const teacherData = await Promise.all(\n        teacherArray.map(async (address) => {\n          const name = await contract.methods.getUserName(address).call();\n          const isTeacher = await contract.methods.isTeacher(address).call();\n          return {\n            address,\n            name: name || \"Unnamed\",\n            isActive: isTeacher\n          };\n        })\n      );\n\n      setTeachers(teacherData);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Error fetching teachers:\", error);\n      setMessage(\"Error fetching teachers. Please try again.\");\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (contract && account) {\n      fetchTeachers();\n    }\n  }, [contract, account]);\n\n  return (\n    <div className=\"teacher-list\">\n      <h3>Teachers</h3>\n      {loading ? (\n        <p>Loading teachers...</p>\n      ) : (\n        <>\n          {message && <p className=\"error\">{message}</p>}\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Address</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {teachers.map((teacher, index) => (\n                <tr key={index}>\n                  <td>{teacher.name}</td>\n                  <td>{teacher.address}</td>\n                  <td>{teacher.isActive ? \"Active\" : \"Inactive\"}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {teachers.length === 0 && <p>No teachers found.</p>}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TeacherList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}