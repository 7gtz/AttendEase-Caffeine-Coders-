{"ast":null,"code":"import contractABI from \"../abis/CollegeAttendance.json\";\nconst loadContract = async web3 => {\n  try {\n    // Get contract address from environment variable\n    const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n    if (!contractAddress) {\n      throw new Error(\"Contract address not found in environment variables\");\n    }\n\n    // Log the ABI structure to debug\n    console.log(\"Contract ABI:\", contractABI);\n    console.log(\"Contract Address:\", contractAddress);\n\n    // Ensure we have a valid ABI\n    if (!contractABI || !Array.isArray(contractABI)) {\n      throw new Error(\"Invalid ABI structure\");\n    }\n\n    // Create the contract instance\n    const contract = new web3.eth.Contract(contractABI, contractAddress);\n\n    // Log available methods\n    console.log(\"Available contract methods:\", Object.keys(contract.methods).filter(key => typeof key === 'string' && !key.startsWith('0x')));\n    return contract;\n  } catch (error) {\n    console.error(\"Error loading contract:\", error);\n    throw error;\n  }\n};\nexport default loadContract;","map":{"version":3,"names":["contractABI","loadContract","web3","contractAddress","process","env","REACT_APP_CONTRACT_ADDRESS","Error","console","log","Array","isArray","contract","eth","Contract","Object","keys","methods","filter","key","startsWith","error"],"sources":["/Users/dhruv/AttendEase-Caffeine-Coders--1/FRONTEND/src/utils/loadContract.js"],"sourcesContent":["import contractABI from \"../abis/CollegeAttendance.json\";\n\nconst loadContract = async (web3) => {\n  try {\n    // Get contract address from environment variable\n    const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n    \n    if (!contractAddress) {\n      throw new Error(\"Contract address not found in environment variables\");\n    }\n    \n    // Log the ABI structure to debug\n    console.log(\"Contract ABI:\", contractABI);\n    console.log(\"Contract Address:\", contractAddress);\n    \n    // Ensure we have a valid ABI\n    if (!contractABI || !Array.isArray(contractABI)) {\n      throw new Error(\"Invalid ABI structure\");\n    }\n\n    // Create the contract instance\n    const contract = new web3.eth.Contract(contractABI, contractAddress);\n    \n    // Log available methods\n    console.log(\"Available contract methods:\", \n      Object.keys(contract.methods).filter(key => typeof key === 'string' && !key.startsWith('0x')));\n    \n    return contract;\n  } catch (error) {\n    console.error(\"Error loading contract:\", error);\n    throw error;\n  }\n};\n\nexport default loadContract;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gCAAgC;AAExD,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;EACnC,IAAI;IACF;IACA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;IAE9D,IAAI,CAACH,eAAe,EAAE;MACpB,MAAM,IAAII,KAAK,CAAC,qDAAqD,CAAC;IACxE;;IAEA;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,WAAW,CAAC;IACzCQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,eAAe,CAAC;;IAEjD;IACA,IAAI,CAACH,WAAW,IAAI,CAACU,KAAK,CAACC,OAAO,CAACX,WAAW,CAAC,EAAE;MAC/C,MAAM,IAAIO,KAAK,CAAC,uBAAuB,CAAC;IAC1C;;IAEA;IACA,MAAMK,QAAQ,GAAG,IAAIV,IAAI,CAACW,GAAG,CAACC,QAAQ,CAACd,WAAW,EAAEG,eAAe,CAAC;;IAEpE;IACAK,OAAO,CAACC,GAAG,CAAC,6BAA6B,EACvCM,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAAC,CAACC,MAAM,CAACC,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACA,GAAG,CAACC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAEhG,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAepB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}