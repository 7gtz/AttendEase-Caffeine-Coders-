{"ast":null,"code":"import contractABI from \"../abis/CollegeAttendance.json\";\nconst loadContract = async web3 => {\n  // Hardcode the contract address\n  const contractAddress = \"0xE18C9888139938e0207f29317e79BD86332D3b39\";\n  const rawAbi = contractABI.abi[0];\n  const abi = Array.isArray(rawAbi) ? rawAbi : contractABI.abi;\n  const contract = new web3.eth.Contract(abi, contractAddress);\n  console.log(\"Available contract methods:\", Object.keys(contract.methods).filter(key => typeof key === 'string' && !key.startsWith('0x')));\n  return contract;\n};\nexport default loadContract;","map":{"version":3,"names":["contractABI","loadContract","web3","contractAddress","rawAbi","abi","Array","isArray","contract","eth","Contract","console","log","Object","keys","methods","filter","key","startsWith"],"sources":["/Users/dhruv/AttendEase-Caffeine-Coders--1/FRONTEND/src/utils/loadContract.js"],"sourcesContent":["import contractABI from \"../abis/CollegeAttendance.json\";\n\nconst loadContract = async (web3) => {\n  // Hardcode the contract address\n  const contractAddress = \"0xE18C9888139938e0207f29317e79BD86332D3b39\";\n  const rawAbi = contractABI.abi[0];\n  const abi = Array.isArray(rawAbi) ? rawAbi : contractABI.abi;\n  const contract = new web3.eth.Contract(abi, contractAddress);\n  \n  console.log(\"Available contract methods:\", \n    Object.keys(contract.methods).filter(key => typeof key === 'string' && !key.startsWith('0x')));\n  \n  return contract;\n};\n\nexport default loadContract;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gCAAgC;AAExD,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;EACnC;EACA,MAAMC,eAAe,GAAG,4CAA4C;EACpE,MAAMC,MAAM,GAAGJ,WAAW,CAACK,GAAG,CAAC,CAAC,CAAC;EACjC,MAAMA,GAAG,GAAGC,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,GAAGA,MAAM,GAAGJ,WAAW,CAACK,GAAG;EAC5D,MAAMG,QAAQ,GAAG,IAAIN,IAAI,CAACO,GAAG,CAACC,QAAQ,CAACL,GAAG,EAAEF,eAAe,CAAC;EAE5DQ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EACvCC,MAAM,CAACC,IAAI,CAACN,QAAQ,CAACO,OAAO,CAAC,CAACC,MAAM,CAACC,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACA,GAAG,CAACC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;EAEhG,OAAOV,QAAQ;AACjB,CAAC;AAED,eAAeP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}